{"version":3,"sources":["components/StageRouter.tsx","components/TypedText.tsx","utils.ts","stages/IntroStage.tsx","stages/FirstStage.tsx","theme.tsx","App.tsx","index.tsx"],"names":["Stage","useTypedText","text","type","useState","terminalOutput","setTerminalOutput","useEffect","length","setTimeout","charAt","Math","random","randomInt","min","max","round","Wrapper","styled","div","IntroStage","setStage","useUpdateAtom","stageAtom","line1","line1Done","line2","line2Done","line3","line3Done","onClick","START","FirstStage","INTRO","atomWithStorage","StageRouter","useAtomValue","theme","colors","background","foreground","bright_foreground","black","red","green","yellow","blue","magenta","cyan","white","AppWrapper","props","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHAMYA,E,6DCYGC,EAbM,SAACC,GAAkD,IAApCC,IAAmC,yDACrE,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KASA,OAPAC,qBAAU,WACJJ,GAAQE,EAAeG,OAASN,EAAKM,QACvCC,YAAW,WACTH,EAAkBD,EAAiBH,EAAKQ,OAAOL,EAAeG,WAC7D,GAAAG,KAAKC,SAAL,MAEJ,CAACP,EAAgBC,EAAmBH,IAChC,CAACE,EAAgBA,EAAeG,SAAWN,EAAKM,SCZ1CK,EAHG,SAACC,EAAaC,GAAd,OAChBJ,KAAKK,MAAML,KAAKC,UAAYG,EAAMD,GAAOA,I,OCMrCG,EAAUC,IAAOC,IAAV,8HAiCEC,EA1Bc,WAC3B,IAAMC,EAAWC,wBAAcC,GAC/B,EAA2BtB,EAAa,aAAD,OAAcY,EAAU,IAAM,QAArE,mBAAOW,EAAP,KAAcC,EAAd,KACA,EAA2BxB,EACzB,4DACAwB,GAFF,mBAAOC,EAAP,KAAcC,EAAd,KAIA,EAA2B1B,EAAa,qDAAD,OACgBY,EAAU,IAAK,MACpEc,GAFF,mBAAOC,EAAP,KAAcC,EAAd,KAKA,OACE,eAACZ,EAAD,WACE,6BAAKO,IACL,4BAAIE,IACJ,4BAAIE,IACHC,GACC,wBAAQ1B,KAAK,SAAS2B,QAAS,kBAAMT,EAASrB,EAAM+B,QAApD,iCChBOC,EAZc,WAC3B,IAAMX,EAAWC,wBAAcC,GAC/B,OACE,qCACE,oDACA,wBAAQpB,KAAK,SAAS2B,QAAS,kBAAMT,EAASrB,EAAMiC,QAApD,uB,SJHMjC,O,iBAAAA,I,kBAAAA,M,KAKL,I,EAAMuB,EAAYW,0BAAgB,QAASlC,EAAMiC,OAezCE,EAbe,WAG5B,OAFqBC,uBAAab,IAGhC,KAAKvB,EAAMiC,MACT,OAAO,cAAC,EAAD,IACT,KAAKjC,EAAM+B,MACT,OAAO,cAAC,EAAD,IACT,QACE,OAAO,4EKJEM,EAlBD,CACZC,OAAQ,CAENC,WAAY,UACZC,WAAY,UACZC,kBAAmB,UAEnBC,MAAO,UACPC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,QAAS,UACTC,KAAM,UACNC,MAAO,YCTLC,EAAahC,IAAOC,IAAV,2OAQA,SAACgC,GAAD,OAAWA,EAAMd,MAAMC,OAAOC,cACnC,SAACY,GAAD,OAAWA,EAAMd,MAAMC,OAAOE,cAW1BY,EARO,kBACpB,cAAC,IAAD,CAAef,MAAOA,EAAtB,SACE,cAACa,EAAD,UACE,cAAC,EAAD,SChBNG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90f840f4.chunk.js","sourcesContent":["import React from 'react';\nimport { atomWithStorage, useAtomValue } from 'jotai/utils';\nimport IntroStage from '../stages/IntroStage';\nimport FirstStage from '../stages/FirstStage';\n\n// eslint-disable-next-line no-shadow\nexport enum Stage {\n  INTRO = 0,\n  START,\n}\n\nexport const stageAtom = atomWithStorage('stage', Stage.INTRO);\n\nconst StageRouter: React.FC = () => {\n  const currentStage = useAtomValue(stageAtom);\n\n  switch (currentStage) {\n    case Stage.INTRO:\n      return <IntroStage />;\n    case Stage.START:\n      return <FirstStage />;\n    default:\n      return <h1>I have no idea how you could end up here</h1>;\n  }\n};\n\nexport default StageRouter;\n","import { useEffect, useState } from 'react';\n\nconst letterMeanDelayMs = 80;\nconst letterDelyDeviation = 30;\n\nconst useTypedText = (text: string, type = true): [string, boolean] => {\n  const [terminalOutput, setTerminalOutput] = useState('');\n\n  useEffect(() => {\n    if (type && terminalOutput.length < text.length) {\n      setTimeout(() => {\n        setTerminalOutput(terminalOutput + text.charAt(terminalOutput.length));\n      }, Math.random() * (2 * letterDelyDeviation) + (letterMeanDelayMs - letterDelyDeviation));\n    }\n  }, [terminalOutput, setTerminalOutput, type]);\n  return [terminalOutput, terminalOutput.length === text.length];\n};\n\nexport default useTypedText;\n","const randomInt = (min: number, max: number): number =>\n  Math.round(Math.random() * (max - min) + min);\n\nexport default randomInt;\n","import { useUpdateAtom } from 'jotai/utils';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Stage, stageAtom } from '../components/StageRouter';\nimport useTypedText from '../components/TypedText';\nimport randomInt from '../utils';\n\nconst Wrapper = styled.div`\n  margin: auto;\n  width: clamp(50vw, 30em, 100vw);\n  display: flex;\n  flex-direction: column;\n`;\n\nconst IntroStage: React.FC = () => {\n  const setStage = useUpdateAtom(stageAtom);\n  const [line1, line1Done] = useTypedText(`Operator #${randomInt(1000, 9999)}`);\n  const [line2, line2Done] = useTypedText(\n    'You have been awaken because your assistance is required!',\n    line1Done,\n  );\n  const [line3, line3Done] = useTypedText(\n    `The process /usr/bin/autopilot exited with Error: ${randomInt(100, 999)}`,\n    line2Done,\n  );\n\n  return (\n    <Wrapper>\n      <h1>{line1}</h1>\n      <p>{line2}</p>\n      <p>{line3}</p>\n      {line3Done && (\n        <button type=\"button\" onClick={() => setStage(Stage.START)}>\n          Manual override\n        </button>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default IntroStage;\n","import { useUpdateAtom } from 'jotai/utils';\nimport React from 'react';\nimport { Stage, stageAtom } from '../components/StageRouter';\n\nconst FirstStage: React.FC = () => {\n  const setStage = useUpdateAtom(stageAtom);\n  return (\n    <>\n      <h1>Under construction</h1>\n      <button type=\"button\" onClick={() => setStage(Stage.INTRO)}>\n        BACK\n      </button>\n    </>\n  );\n};\n\nexport default FirstStage;\n","const theme = {\n  colors: {\n    // default colors\n    background: '#1e2127',\n    foreground: '#abb2bf',\n    bright_foreground: '#e6efff',\n\n    black: '#1e2127',\n    red: '#e06c75',\n    green: '#98c379',\n    yellow: '#d19a66',\n    blue: '#61afef',\n    magenta: '#c678dd',\n    cyan: '#56b6c2',\n    white: '#828791',\n  },\n};\n\nexport default theme;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport StageRouter from './components/StageRouter';\nimport theme from './theme';\n\nconst AppWrapper = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  font-family: Hack, monospace;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  background: ${(props) => props.theme.colors.background};\n  color: ${(props) => props.theme.colors.foreground};\n`;\n\nconst App: React.FC = () => (\n  <ThemeProvider theme={theme}>\n    <AppWrapper>\n      <StageRouter />\n    </AppWrapper>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}