{"version":3,"sources":["components/StageRouter.tsx","components/TypedText.tsx","theme.tsx","utils.ts","stages/IntroStage.tsx","stages/FirstStage.tsx","App.tsx","index.tsx"],"names":["Stage","useTypedText","text","start","characterDelay","useState","terminalOutput","setTerminalOutput","input","useMemo","useEffect","length","setTimeout","concat","charAt","theme","colors","background","foreground","bright_foreground","black","red","green","yellow","blue","magenta","cyan","white","randomInt","min","max","Math","round","random","Wrapper","styled","div","errors","IntroStage","setStage","useUpdateAtom","stageAtom","header","headerDone","call2Action","call2ActionDone","processCrashed","processCrashedDone","errorCode","errorCodeDone","error","errorDone","loadingDots","loadingDotsDone","prompt","promptDone","command","style","color","type","onClick","START","margin","padding","paddingTop","paddingBottom","textAlign","fontSize","cursor","border","FirstStage","INTRO","atomWithStorage","StageRouter","useAtomValue","AppWrapper","props","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHAMYA,E,6DCkBGC,EApBM,SACnBC,GAGuB,IAFvBC,IAEsB,yDADtBC,EACsB,uDANM,GAO5B,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEMC,EAAQC,mBAAQ,kBAAMP,IAAM,IAUlC,OATAQ,qBAAU,WACJP,GAASG,EAAeK,OAASH,EAAMG,QACzCC,YAAW,WACTL,EACED,EAAeO,OAAOL,EAAMM,OAAOR,EAAeK,YAEnDP,KAEJ,CAACG,EAAmBD,EAAgBF,EAAgBI,EAAOL,IACvD,CAACG,EAAgBA,EAAeK,SAAWH,EAAMG,SCH3CI,EAlBD,CACZC,OAAQ,CAENC,WAAY,UACZC,WAAY,UACZC,kBAAmB,UAEnBC,MAAO,UACPC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,QAAS,UACTC,KAAM,UACNC,MAAO,YCXIC,EAHG,SAACC,EAAaC,GAAd,OAChBC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,I,OCOrCK,EAAUC,IAAOC,IAAV,8HAOPC,EAAS,CACb,+CACA,sDAkEaC,EA/Dc,WAC3B,IAAMC,EAAWC,wBAAcC,GAC/B,EAA6BxC,EAAa,aAAD,OAC1B2B,EAAU,IAAM,QAD/B,mBAAOc,EAAP,KAAeC,EAAf,KAGA,EAAuC1C,EACrC,8DACA0C,GAFF,mBAAOC,EAAP,KAAoBC,EAApB,KAIA,EAA6C5C,EAC3C,8CACA4C,GAFF,mBAAOC,EAAP,KAAuBC,EAAvB,KAIA,EAAmC9C,EAAa,UAAD,OACnC2B,EAAU,IAAK,MACzBmB,EACA,KAHF,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAA2BhD,EACzBoC,EAAOT,EAAU,EAAGS,EAAO1B,OAAS,IACpCsC,GAFF,mBAAOC,EAAP,KAAcC,EAAd,KAIA,EAAuClD,EAAa,MAAOkD,EAAW,KAAtE,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA6BpD,EAAa,IAAKoD,EAAiB,KAAhE,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkBtD,EAChB,sCACAsD,GAFKC,EAAP,oBAKA,OACE,eAACtB,EAAD,WACE,6BAAKQ,IACL,4BAAIE,IACJ,4BAAIE,IACJ,oBAAGW,MAAO,CAAEC,MAAO3C,EAAMC,OAAOK,KAAhC,UACG2B,EADH,IACeE,MAEbI,GAAU,4BAAIF,IACfE,GACC,yBACEK,KAAK,SACLC,QAAS,kBAAMrB,EAASvC,EAAM6D,QAC9BJ,MAAO,CACLK,OAAQ,EACRC,QAAS,EACTC,WAAY,OACZC,cAAe,OACfC,UAAW,OACXC,SAAU,OACVC,OAAQ,UACRV,MAAO3C,EAAMC,OAAOG,kBACpBF,WAAYF,EAAMC,OAAOC,WACzBoD,OAAQ,QAbZ,UAgBE,sBAAMZ,MAAO,CAAEC,MAAO3C,EAAMC,OAAOM,OAAnC,SAA6C,OAC7C,+BAAOkC,WC5DFc,EAZc,WAC3B,IAAM/B,EAAWC,wBAAcC,GAC/B,OACE,qCACE,oDACA,wBAAQkB,KAAK,SAASC,QAAS,kBAAMrB,EAASvC,EAAMuE,QAApD,uB,SLHMvE,O,iBAAAA,I,kBAAAA,M,KAKL,I,EAAMyC,EAAY+B,0BAAgB,QAASxE,EAAMuE,OAezCE,EAbe,WAG5B,OAFqBC,uBAAajC,IAGhC,KAAKzC,EAAMuE,MACT,OAAO,cAAC,EAAD,IACT,KAAKvE,EAAM6D,MACT,OAAO,cAAC,EAAD,IACT,QACE,OAAO,4EMjBPc,EAAaxC,IAAOC,IAAV,+PAWA,SAACwC,GAAD,OAAWA,EAAM7D,MAAMC,OAAOC,cACnC,SAAC2D,GAAD,OAAWA,EAAM7D,MAAMC,OAAOE,cAW1B2D,EARO,kBACpB,cAAC,IAAD,CAAe9D,MAAOA,EAAtB,SACE,cAAC4D,EAAD,UACE,cAAC,EAAD,SCnBNG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.51f8f250.chunk.js","sourcesContent":["import React from 'react';\nimport { atomWithStorage, useAtomValue } from 'jotai/utils';\nimport IntroStage from '../stages/IntroStage';\nimport FirstStage from '../stages/FirstStage';\n\n// eslint-disable-next-line no-shadow\nexport enum Stage {\n  INTRO = 0,\n  START,\n}\n\nexport const stageAtom = atomWithStorage('stage', Stage.INTRO);\n\nconst StageRouter: React.FC = () => {\n  const currentStage = useAtomValue(stageAtom);\n\n  switch (currentStage) {\n    case Stage.INTRO:\n      return <IntroStage />;\n    case Stage.START:\n      return <FirstStage />;\n    default:\n      return <h1>I have no idea how you could end up here</h1>;\n  }\n};\n\nexport default StageRouter;\n","import { useEffect, useMemo, useState } from 'react';\n\nconst defaultCharacterDelay = 60;\n\nconst useTypedText = (\n  text: string,\n  start = true,\n  characterDelay = defaultCharacterDelay,\n): [string, boolean] => {\n  const [terminalOutput, setTerminalOutput] = useState('');\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const input = useMemo(() => text, []);\n  useEffect(() => {\n    if (start && terminalOutput.length < input.length) {\n      setTimeout(() => {\n        setTerminalOutput(\n          terminalOutput.concat(input.charAt(terminalOutput.length)),\n        );\n      }, characterDelay);\n    }\n  }, [setTerminalOutput, terminalOutput, characterDelay, input, start]);\n  return [terminalOutput, terminalOutput.length === input.length];\n};\n\nexport default useTypedText;\n","const theme = {\n  colors: {\n    // default colors\n    background: '#1e2127',\n    foreground: '#abb2bf',\n    bright_foreground: '#e6efff',\n\n    black: '#1e2127',\n    red: '#e06c75',\n    green: '#98c379',\n    yellow: '#d19a66',\n    blue: '#61afef',\n    magenta: '#c678dd',\n    cyan: '#56b6c2',\n    white: '#828791',\n  },\n};\n\nexport default theme;\n","const randomInt = (min: number, max: number): number =>\n  Math.round(Math.random() * (max - min) + min);\n\nexport default randomInt;\n","import { useUpdateAtom } from 'jotai/utils';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Stage, stageAtom } from '../components/StageRouter';\nimport useTypedText from '../components/TypedText';\nimport theme from '../theme';\nimport randomInt from '../utils';\n\nconst Wrapper = styled.div`\n  margin: auto;\n  width: clamp(50vw, 30em, 100vw);\n  display: flex;\n  flex-direction: column;\n`;\n\nconst errors = [\n  'Unexpected exception from EarthUplinkService',\n  'Solar radiaton exceeding maximum allowed threshold',\n];\n\nconst IntroStage: React.FC = () => {\n  const setStage = useUpdateAtom(stageAtom);\n  const [header, headerDone] = useTypedText(\n    `Operator #${randomInt(1000, 9999)}`,\n  );\n  const [call2Action, call2ActionDone] = useTypedText(\n    'You have been awakened because your assistance is required!',\n    headerDone,\n  );\n  const [processCrashed, processCrashedDone] = useTypedText(\n    'The process /usr/bin/autopilot exited with ',\n    call2ActionDone,\n  );\n  const [errorCode, errorCodeDone] = useTypedText(\n    `Error: ${randomInt(100, 999)}`,\n    processCrashedDone,\n    100,\n  );\n  const [error, errorDone] = useTypedText(\n    errors[randomInt(0, errors.length - 1)],\n    errorCodeDone,\n  );\n  const [loadingDots, loadingDotsDone] = useTypedText('...', errorDone, 1000);\n  const [prompt, promptDone] = useTypedText('>', loadingDotsDone, 1000);\n  const [command] = useTypedText(\n    'systemctl restart autopilot.service',\n    promptDone,\n  );\n\n  return (\n    <Wrapper>\n      <h1>{header}</h1>\n      <p>{call2Action}</p>\n      <p>{processCrashed}</p>\n      <p style={{ color: theme.colors.red }}>\n        {errorCode} {error}\n      </p>\n      {!prompt && <p>{loadingDots}</p>}\n      {prompt && (\n        <button\n          type=\"button\"\n          onClick={() => setStage(Stage.START)}\n          style={{\n            margin: 0,\n            padding: 0,\n            paddingTop: '1rem',\n            paddingBottom: '1rem',\n            textAlign: 'left',\n            fontSize: '1rem',\n            cursor: 'pointer',\n            color: theme.colors.bright_foreground,\n            background: theme.colors.background,\n            border: 'none',\n          }}\n        >\n          <span style={{ color: theme.colors.green }}>{'> '}</span>\n          <span>{command}</span>\n        </button>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default IntroStage;\n","import { useUpdateAtom } from 'jotai/utils';\nimport React from 'react';\nimport { Stage, stageAtom } from '../components/StageRouter';\n\nconst FirstStage: React.FC = () => {\n  const setStage = useUpdateAtom(stageAtom);\n  return (\n    <>\n      <h1>Under construction</h1>\n      <button type=\"button\" onClick={() => setStage(Stage.INTRO)}>\n        BACK\n      </button>\n    </>\n  );\n};\n\nexport default FirstStage;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport StageRouter from './components/StageRouter';\nimport theme from './theme';\n\nconst AppWrapper = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n\n  * {\n    font-family: Hack, monospace;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  background: ${(props) => props.theme.colors.background};\n  color: ${(props) => props.theme.colors.foreground};\n`;\n\nconst App: React.FC = () => (\n  <ThemeProvider theme={theme}>\n    <AppWrapper>\n      <StageRouter />\n    </AppWrapper>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}